@model SistemaVentas.Model.Ticket

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Precio -->
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <!-- Delivered (Entregado) -->
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Delivered" /> @Html.DisplayNameFor(model => model.Delivered)
                </label>
            </div>

            <!-- Selección de asiento -->
            <div class="form-group">
                <label asp-for="SeatId" class="control-label"></label>
                <select asp-for="SeatId" class="form-control" asp-items="ViewBag.SeatId"></select>
            </div>

            <!-- Customer (Solo lectura) -->
            <div class="form-group">
                <label class="control-label">Customer</label>
                <input type="text" class="form-control" value="@ViewData["UserEmail"]" readonly />
                <input asp-for="CustomerId" type="hidden" value="@Model.CustomerId" />
            </div>

            <!-- Categoría -->
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
            </div>

            <!-- Ruta -->
            <div class="form-group">
                <label asp-for="RouteId" class="control-label"></label>
                <select asp-for="RouteId" class="form-control" asp-items="ViewBag.RouteId"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Aquí añadimos la sección para mostrar los botones de descarga si hay tickets generados -->
@{
    var session = Context.Session;
    const string sessionKey = "TicketNotifications";
    var ticketIds = session.GetString(sessionKey);

    var tickets = ticketIds != null
        ? System.Text.Json.JsonSerializer.Deserialize<List<int>>(ticketIds)
        : new List<int>();
}

@if (tickets.Any())
{
    <div class="alert alert-success p-2">
        <h4>¡Ticket(s) generado(s) con éxito!</h4>
        @foreach (var ticketId in tickets)
        {
            <a asp-action="DownloadPdf" asp-route-id="@ticketId" class="btn btn-primary m-1">
                Descargar Ticket #@ticketId
            </a>
        }

        @* Elimina la lista de tickets de la sesión para no volver a mostrar el botón en la próxima carga *@
        @{
            session.Remove(sessionKey);
        }
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
